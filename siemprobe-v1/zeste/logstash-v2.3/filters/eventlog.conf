filter {
    if [type] == "eventlog" {
    	if [message] =~ /ERROR|WARNING|AUDIT_FAILURE/ {
    		mutate {
   				add_tag => [ "incident" ]
	  		}
	  		grok {
				match => { "message" => "%{TIMESTAMP_ISO8601:evt_timestamp} %{SYSLOGHOST:evt_host} %{DATA:incident_type} %{GREEDYDATA:incident_payload}" }
		    }
			mutate {
				remove_field => [ "host", "@version" ]
			}		    	
		}
		else if [message] =~ /4625/{
			grok {
				match => { "message" => "%{TIMESTAMP_ISO8601:evt_timestamp} %{SYSLOGHOST:evt_host} %{DATA:status} %{DATA:id} %{DATA:description}[.]" }
		    }	
			grok {
			   	match => {	"message" => "(Nom.du.compte.:..(?<useraccount>[a-zA-Z0-9]+[\$]*))" }
			}
			mutate {
				remove_field => [ "message", "host", "@version" ]
			}
		}
		else if [message] =~ /4656/{
			grok {
				match => { "message" => "%{TIMESTAMP_ISO8601:evt_timestamp} %{SYSLOGHOST:evt_host} %{DATA:status} %{DATA:id} %{DATA:description}[.]" }
		    }	
			grok {
			   	match => {	"message" => "(Nom.du.compte.:..(?<useraccount>[a-zA-Z0-9]+[\$]*))" }
			}
			grok {
			   	match => {	"message" => "(Type...objet.:..(?<objecttype>[a-zA-Z]+))" }
			}  
			grok {
			   	match => {	"message" => "(Nom.de.l.objet.:..(?<objectname>[a-zA-Z0-9:-_éèà@~\s\$\\.-]*)..ID.du.handle)" }
			}
			grok {
			   	match => {	"message" => "(Accès.:..(?<accesstype>[A-Z]+[_A-Z]*)..)" }
			}
			mutate {
				remove_field => [ "message", "host", "@version" ]
			}
		}
		else if [message] =~ /4659/{
			grok {
				match => { "message" => "%{TIMESTAMP_ISO8601:evt_timestamp} %{SYSLOGHOST:evt_host} %{DATA:status} %{DATA:id} %{DATA:description}[.]" }
		    }	
			grok {
			   	match => {	"message" => "(Nom.du.compte.:..(?<useraccount>[a-zA-Z0-9]+[\$]*))" }
			}
			grok {
			   	match => {	"message" => "(Type...objet.:.(?<objecttype>[a-zA-Z]+))" }
			}  
			grok {
			   	match => {	"message" => "(Nom.de.l.objet.:.(?<objectname>[a-zA-Z0-9:-_éèà@~\s\$\\.-]*)..ID.du.handle)" }
			}
			mutate {
				remove_field => [ "message", "host", "@version" ]
			}
		}
		else if [message] =~ /4771/{
			grok {
				match => { "message" => "%{TIMESTAMP_ISO8601:evt_timestamp} %{SYSLOGHOST:evt_host} %{DATA:status} %{DATA:id} %{DATA:description}[.]" }
		    }	
			grok {
			   	match => {	"message" => "(Nom.du.compte.:..(?<useraccount>[a-zA-Z0-9]+[\$]*))" }
			}
			grok {
			   	match => {	"message" => "(::ffff:(?<userip>(%{IP})))" }
			}
			mutate {
				remove_field => [ "message", "host", "@version" ]
			}
		}
		else {
   			drop { }
  		}
    }
}